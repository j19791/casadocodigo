<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:f="http://xmlns.jcp.org/jsf/core">

	<!-- <h:messages /> utilizando mensagens ao lado do campo -->
	
<!-- utilizando templates -->	 
<!-- 	<h:head> -->
<!-- 		<h:outputStylesheet library="css" name="bootstrap.min.css" /> -->
<!-- 		<h:outputStylesheet library="css" name="style-admin.css" />incluido espaço nas margens da pagina p/ q o formulario nao seja escondido pelo menu		 -->
<!-- 	</h:head> -->
	
<!-- 	<h:body>servem para que o JSF possa identificar corretamente onde é o corpo da página -->
	
<!-- 	<nav class="navbar navbar-inverse navbar-fixed-top"> -->
<!--       <div class="container">  -->
<!--         <div class="navbar-header"> -->
<!--           <a class="navbar-brand" href="#">Casa do Código</a> -->
<!--         </div> -->
<!--         <div id="navbar" class="collapse navbar-collapse"> -->
<!--           <ul class="nav navbar-nav"> -->
<!--             <li><h:link value="Lista" outcome="lista" /></li> -->
<!--             <li class="active"><a href="#">Cadastro</a></li> -->
<!--           </ul> -->
<!--         </div> -->
<!--       </div> -->
<!-- 	</nav> -->
	
	
<!-- 	<div class="container"> -->
	
<ui:composition template="/templates/_admin_template.xhtml">
	 
	<ui:param name="cadastro" value="active" /><!-- utilizando parametros p/ ser passado ao template -->
	
	<ui:define name="body"><!-- conteudo abaixo sera usado p/ preencher o template -->
	
	<h1>Cadastro de Livros</h1>
	
	<h:form  enctype="multipart/form-data"><!-- precisamos dizer no nosso formulário que queremos enviar arquivo por ele e não em formato de texto. -->
        <div  class="form-group">
            <h:outputLabel value="Título" />
            <h:inputText value="#{adminLivrosBean.livro.titulo}" required="true" id="titulo" styleClass="form-control" /><!-- utilizando agora message bundle. Remover requiredMessage="O Título é um campo obrigatório!" -->
        	<h:message for="titulo" /> <!-- mensagem de validação/ conversão fica ao lado do campo -->
        </div>
        <div  class="form-group">
            <h:outputLabel value="Descrição" />
            <h:inputTextarea cols="20" rows="10" value="#{adminLivrosBean.livro.descricao}"  required="true" id="descricao" styleClass="form-control" /><!-- utilizando agora message bundle. Remover requiredMessage="A Descrição é Obrigatória" -->
        	<h:message for="descricao"/>
        </div>
        <div  class="form-group">
            <h:outputLabel value="Número de Páginas" />
            <h:inputText value="#{adminLivrosBean.livro.numeroPaginas}"
                required="true" id="paginas" styleClass="form-control"/><!-- utilizando bean validation requiredMessage="O Número de Páginas é Obrigatório" -->
            	<!-- <f:validateLongRange minimum="80" /> utilizando bean validation-->
        	<h:message for="paginas" />
        	<!-- </h:inputText> -->
        </div>
        <div  class="form-group">
            <h:outputLabel value="Preço" />
            <h:inputText value="#{adminLivrosBean.livro.preco}"
                required="true" id="preco" styleClass="form-control"/><!-- requiredMessage="O Preço é Obrigatório" -->
            	<!-- <f:validateDoubleRange minimum="20" maximum="150" /> -->
            <h:message for="preco"/>
        	<!-- </h:inputText> -->
        </div>
        <div  class="form-group">
		    <h:outputLabel value="Autores" />
		    <!-- converter: o JSF está passando os id's de autores como String e no nosso bean AdminLivrosBean esperamos uma lista de Integer -->
		    <h:selectManyListbox value="#{adminLivrosBean.livro.autores}" converter="autorConverter"  id="autores" styleClass="form-control"><!-- autores q serão enviados do formulário p/ o bean. converter="javax.faces.Integer" será utilizado o converter customizado-->
		    	<!-- value: lista de autores que vem do nosso servidor
		    	 itemLabel: qual será o valor exibido para o usuário 
		    	 itemValue: diremos qual valor será colocado na nossa entidade 
		    	 var: que passa para cada elemento da lista-->
		        <f:selectItems value="#{adminLivrosBean.autores}"
		         var="autor"
		         itemValue="#{autor}"
		         itemLabel="#{autor.nome}" />
		    </h:selectManyListbox>
		    <h:message for="autores"/>
		</div>
		<div  class="form-group">
		    <h:outputLabel value="Data de Publicação" />
		    <h:inputText value="#{adminLivrosBean.livro.dataPublicacao}"
		            id="dataPublicacao" styleClass="form-control"><!--f:convertDateTime só funciona para objetos do tipo java.util.Date - usar .time na EL-->
			    <!-- Quando trabalhamos com data, não há um conversor automático, não tem como o JSF saber o formato da data ( brasileiro, internacional, etc). Temos então que informar ao JSF qual conversor usaremos. -->
			    <!-- <f:convertDateTime pattern="dd/MM/yyyy" timeZone="America/Sao_Paulo" /> --><!-- timezone: qdo não especificamos nenhum, o default é UTC-0, e podemos gerar problemas futuros -->
		    	<!-- será utilizado nosso próprio converter (CalendarConverter.java), p/ q o pattern e o timezone ja seja compartilhado por toda aplicação -->
		    </h:inputText>
		    <h:message for="dataPublicacao" />
		</div>
		<div  class="form-group">
		    <h:outputLabel value="Capa do Livro" />
		    <h:inputFile value="#{adminLivrosBean.capaLivro}" id="capaLivro" styleClass="form-control" />
		    <h:message for="capaLivro" />
		</div>
        <h:commandButton value="Cadastrar" action="#{adminLivrosBean.salvar}" styleClass="btn btn-primary"/>
    </h:form>
    
</ui:define>

</ui:composition>
    
</html>

<!-- message bundle - arquivo de mensagens de validações:  src/main/webapp/WEB-INF/jsf_messages.properties -->
